// <auto-generated />
using System;
using BlogProject.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogProject.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220830160747_addedPostPhoto")]
    partial class addedPostPhoto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlogProject.Core.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kategori 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kategori 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kategori 3"
                        });
                });

            modelBuilder.Entity("BlogProject.Core.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Blog Body 1",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 8, 30, 19, 7, 47, 700, DateTimeKind.Local).AddTicks(6243),
                            Description = "Blog Description",
                            ImagePath = "1.jpg",
                            Title = "Blog Title 1"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Blog Body 2",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 8, 30, 19, 7, 47, 700, DateTimeKind.Local).AddTicks(6253),
                            Description = "Blog Description",
                            ImagePath = "2.jpg",
                            Title = "Blog Title 2"
                        },
                        new
                        {
                            Id = 3,
                            Body = "Blog Body 3",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 8, 30, 19, 7, 47, 700, DateTimeKind.Local).AddTicks(6253),
                            Description = "Blog Description",
                            ImagePath = "3.jpg",
                            Title = "Blog Title 3"
                        },
                        new
                        {
                            Id = 4,
                            Body = "Blog Body 4",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 8, 30, 19, 7, 47, 700, DateTimeKind.Local).AddTicks(6254),
                            Description = "Blog Description",
                            ImagePath = "4.jpg",
                            Title = "Blog Title 4"
                        });
                });

            modelBuilder.Entity("BlogProject.Core.PostFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId")
                        .IsUnique();

                    b.ToTable("PostFeatures");
                });

            modelBuilder.Entity("BlogProject.Core.Post", b =>
                {
                    b.HasOne("BlogProject.Core.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlogProject.Core.PostFeature", b =>
                {
                    b.HasOne("BlogProject.Core.Post", "Post")
                        .WithOne("PostFeature")
                        .HasForeignKey("BlogProject.Core.PostFeature", "PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("BlogProject.Core.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("BlogProject.Core.Post", b =>
                {
                    b.Navigation("PostFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
